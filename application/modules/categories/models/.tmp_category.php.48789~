<?php
class Category extends ORM {

    var $table = 'categories';
	
	var $has_many = array("article");

    function __construct($id = NULL)
    {
        parent::__construct($id);
    }
	
	function get_option()
	{
		$query = "SELECT node.id,CONCAT(REPEAT( '&#151;', (COUNT(parent.name) - 1) ), node.name) AS name
					FROM $this->table AS node,
					$this->table AS parent
					WHERE node.lft BETWEEN parent.lft AND parent.rgt
					AND parent.module = '".$this->parent['model']."'
					AND node.module = '".$this->parent['model']."' 
					GROUP BY node.name
					ORDER BY node.lft";
		$query = $this->query($query)->all_to_assoc('id','name');
		return $query;
	}
	
	function path($current = TRUE)
	{
		($current)?$equal = '=':$equal = '';
		$query = "select * from $this->table 
				  where lft <$equal (select lft from $this->table where id = $this->id) 
				  and rgt >$equal (select lft from $this->table where id = $this->id) 
				  and module = '".$this->parent['model']."'  order by lft asc";
		$query = $this->query($query)->all_to_array();
		return $query;
	}
	
	function breadcrumb($link = FALSE)
	{
		$crumb = "";
		$delimiter = "";
		$data = $this->path();
		foreach($data as $key => $item)
		{
			$crumb .= ($link)?$delimiter.anchor($link.$item['id'],$item['name']):$delimiter.$item['name'];
			$delimiter=" Â» ";
		}
		return $crumb;
	}
	
	
}
?>